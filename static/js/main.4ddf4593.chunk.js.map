{"version":3,"sources":["components/CvText.js","components/Input.js","App.js","index.js"],"names":["Text","props","state","onEditingTask","CV","map","id","name","className","email","number","profile","scholl","study","dateStudy","dateStudy1","language","positionTitle","dateBegin","dateEnd","companyName","mainTask","extra","onClick","Input","handleSubmit","onChange","thiss","edit","onSubmit","placeholder","required","value","con","ref","node","inputName","type","inputEmail","inputPhone","inputProfile","inputScholl","inputStudy","minlength","maxlength","inputDate","inputDate1","inputLanguage","inputTitle","inputBegin","inputEnd","inputCompany","inputTask","inputExtra","App","e","preventDefault","setState","submit","console","log","bind","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ddf4593.chunk.js","sourcesContent":["const Text = (props) => {\n    const { state } = props\n    const { onEditingTask } = props\n        return (\n            state.CV.map(state => {\n                return (\n                    <div key={2}>\n                        <div id='text'>\n                \n               \n                <div id=\"generalInformation\">\n                                <h1>{state.name}</h1>\n                                 <div id='name'>\n                    <p className='information'>{state.email}</p>\n                                    <p className='information' id='number'>{state.number}</p> \n                                    </div>\n                </div> \n                <div id=\"educationalExperience\">\n                    <h1>Profile</h1> \n                                <p id='profile'>{state.profile}</p>          \n                                <p className='normal alonePading'>{state.scholl}</p>\n                                <div id='study'>                          \n                                <p className='normal'>{state.study}</p>\n                                    <p className='date dateText'>{state.dateStudy}-</p>\n                                    <p className='date dateText'>{state.dateStudy1}</p>\n                                </div>\n                                 <p className='extra'>{state.language}</p>\n                </div>\n                    <div id=\"practicalExperience\">\n                                <h1>Pratical Experience</h1> \n                                <div id='position'>\n                                    <p className='normal'>{state.positionTitle}</p>\n                                    <p className='dateText' >{state.dateBegin}-</p>\n                                    <p className=' dateText' id='untilDate'>{state.dateEnd}</p>\n                                </div>\n                                <p className='normal alonePading'>{state.companyName}</p>                       \n                                <p className='big'>{state.mainTask}</p>\n                                <p className='extra alonePading'>{state.extra}</p> \n                </div>\n                        <button onClick={onEditingTask}>Edit</button>\n                        \n            </div>\n\n                        </div>\n                    )\n                })\n        )\n}\nexport default Text\n","const Input = (props) => {\n    const { handleSubmit } = props\n    const { state } = props\n    const { onChange } = props\n    const {thiss} =props\n    if (state.edit) {\n        \n        return (\n            <form onSubmit={handleSubmit} onChange={onChange}>\n                <div id=\"generalInformation\">\n                    \n                        <textarea placeholder=\"Name\" required onChange={onChange} value={state.con.name} ref={node => (thiss.inputName = node)} name=\"name\" type=\"text\" id=\"nameInput\" />\n                        <div id='name'>\n                <textarea placeholder=\"Email\" required  type='email'onChange={ onChange} value={ state.con.email} ref={node => (thiss.inputEmail = node)} name=\"email\" type=\"text\" id=\"emailInput\" />\n                        <textarea placeholder=\"Phone\" required onChange={onChange} value={state.con.number} ref={node => (thiss.inputPhone = node)} name=\"number\" type=\"text\" id=\"numberInput\" />\n                        </div>\n            </div>\n                <div id=\"educationalExperience\">\n                    <h1>Educational Experience</h1>\n                <textarea  placeholder=\"An Overview of you profile\" required  onChange={ onChange} value={ state.con.profile}ref={node => (thiss.inputProfile = node)} name=\"profile\" type=\"text\" id=\"profileInput\" />\n                <textarea placeholder=\"Scholl\"className='degree' required  onChange={ onChange} onChange={ onChange}value={ state.con.scholl} ref={node => (thiss.inputScholl = node)} name=\"scholl\" type=\"text\" id=\"schoolNameInput\" />\n                <div id='study'>\n                <textarea placeholder=\"Degree\"className='degree' required   onChange={ onChange} value={ state.con.study} ref={node => (thiss.inputStudy = node)} name=\"titleOfStudy\" type=\"text\" id=\"titleOfStudyInput\" />\n                        <textarea  placeholder=\"From\"  className='date' required minlength=\"4\"  maxlength=\"4\" onChange={onChange} value={state.con.dateStudy} ref={node => (thiss.inputDate = node)} name=\"dateOfStudy\"  id=\"dateOfStudyInput\" />\n                        <textarea   placeholder=\"Until\"  className='date' required minlength=\"4\" maxlength=\"4\"onChange={onChange} value={state.con.dateStudy1} ref={node => (thiss.inputDate1 = node)} name=\"dateOfStudy1\"  id=\"dateOfStudyInput1\" />\n                    </div>\n                <textarea placeholder=\"Language \"className='extra'   onChange={ onChange} onChange={ onChange}value={ state.con.language} ref={node => (thiss.inputLanguage = node)} name=\"scholl\" type=\"text\" id=\"schoolNameInput\" />\n\n            </div>\n                <div id=\"practicalExperience\">\n                    <h1>Pratical Experience</h1>\n                    <div id='position'>\n                                        <textarea placeholder=\"Position \" className='normal' required  onChange={ onChange} value={ state.con.positionTitle} ref={node => (thiss.inputTitle= node)} name=\"position\" type=\"text\" id=\"positionTitleInput\" />\n                    <textarea minlength=\"4\"  maxlength=\"4\" placeholder=\"From\" className='date' type='date' required onChange={onChange} value={state.con.dateBegin} ref={node => (thiss.inputBegin = node)} name=\"begin\" type=\"text\" id=\"dateFromInput\" />\n                <textarea minlength=\"4\"  maxlength=\"4\" placeholder=\"Until\" className='date' type='date' required  onChange={ onChange} value={ state.con.dateEnd} ref={node => (thiss.inputEnd = node)} name=\"end\" type=\"text\" id=\"dateUntilInput\" />\n                    </div>\n                <textarea placeholder=\"Company \" className='normal' required  onChange={ onChange} value={ state.con.companyName} ref={node => (thiss.inputCompany = node)} name=\"company\" type=\"text\" id=\"companyNameInput\" />\n               \n                <textarea placeholder=\"Tasks\" className='big' required  onChange={ onChange} value={ state.con.mainTask} ref={node => (thiss.inputTask = node)} name=\"task\" type=\"text\" id=\"mainTasksInput\" />\n                                <textarea placeholder=\"Cursos Extras\"className='extra alonePading'   onChange={ onChange} onChange={ onChange}value={ state.con.extra} ref={node => (thiss.inputExtra = node)} name=\"scholl\" type=\"text\" id=\"schoolNameInput\" />\n\n            </div>\n            <button type=\"submit\">\n                Submit\n          </button>\n        </form>\n        )\n    }\n        return null\n\n}\n\nexport default Input\n\n\n","import { Component } from 'react';\nimport Text from './components/CvText'\nimport Input from './components/Input'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      con: {\n        name: '',\n        email: '',\n        number: '',\n        scholl: '',\n        study: '',\n        dateStudy: '',\n        companyName: '',\n        positionTitle: '',\n        mainTask: '',\n        dateBegin: '',\n        dateEnd: '',\n        profile: '',\n        dateStudy1: '',\n        language: '',\n        extra:''\n      },\n      edit: true,\n        submit:false,\n      CV: [],\n      \n    };\n    this.onEditingTask = this.onEditingTask.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.onChange=this.onChange.bind(this)\n  }\n  \n\nhandleSubmit = (e) => {\n  e.preventDefault();\n  this.setState({\n    edit: false,\n    submit: true,\n    CV:[this.state.con]\n        \n  })\n  console.log(this.state.CV)\n};\n  \n  onEditingTask(e) {\n    this.setState({\n      edit: true,\n      submit: false,\n      CV:[]\n   })\n  }\n  onChange(e) {\n    this.setState({\n      con: {\n        name: this.inputName.value,\n        email: this.inputEmail.value,\n        number: this.inputPhone.value,\n        scholl: this.inputScholl.value,\n        study: this.inputStudy.value,\n        dateStudy: this.inputDate.value,\n        companyName: this.inputCompany.value,\n        positionTitle: this.inputTitle.value,\n        mainTask: this.inputTask.value,\n        dateBegin: this.inputBegin.value,\n        dateEnd: this.inputEnd.value,\n        profile: this.inputProfile.value,\n        dateStudy1: this.inputDate1.value,\n        language:this.inputLanguage.value ,\n        extra:this.inputExtra.value\n      }\n    })\n\n  }\n  render() {\n     \n\n    return (\n      <div id='container'>\n        <div id='vertical'></div>\n          <hr id='horizontal'></hr>\n        <Input thiss={this }handleSubmit={this.handleSubmit} state={this.state} onChange={this.onChange} />\n        <Text state={this.state} onEditingTask={this.onEditingTask}  />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}